import java.util.Scanner;

public class SparseMatrix {

    // Method to check if a matrix is sparse
    public static boolean isSparse(int[][] matrix) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        int zeroCount = 0;
        int totalElements = rows * cols;

        // Count the number of zeros in the matrix
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (matrix[i][j] == 0) {
                    zeroCount++;
                }
            }
        }

        // A matrix is sparse if more than half of its elements are zeros
        return zeroCount > totalElements / 2;
    }

    // Method to convert the matrix to sparse matrix representation
    public static void convertToSparseRepresentation(int[][] matrix) {
        System.out.println("\nSparse Matrix Representation (row, column, value):");
        for (int i = 0; i < matrix.length; i++) {
            for (int j = 0; j < matrix[0].length; j++) {
                if (matrix[i][j] != 0) {
                    System.out.printf("(%d, %d, %d)\n", i, j, matrix[i][j]);
                }
            }
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input matrix dimensions
        System.out.print("Enter the number of rows: ");
        int rows = sc.nextInt();
        System.out.print("Enter the number of columns: ");
        int cols = sc.nextInt();

        // Input matrix elements
        int[][] matrix = new int[rows][cols];
        System.out.println("Enter the elements of the matrix:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                matrix[i][j] = sc.nextInt();
            }
        }

        // Check if the matrix is sparse
        if (isSparse(matrix)) {
            System.out.println("The matrix is sparse.");
            // Convert and display sparse matrix representation
            convertToSparseRepresentation(matrix);
        } else {
            System.out.println("The matrix is not sparse.");
        }

        sc.close();
    }
}
